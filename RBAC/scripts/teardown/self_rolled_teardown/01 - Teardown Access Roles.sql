--
-- NAMED_DATABASE Environment
-- 

  -- Schema-level access roles
USE ROLE SECURITYADMIN;
DROP ROLE IF EXISTS "SHERLOCKWINGS_EDW_UTIL_DB_R_AR";
DROP ROLE IF EXISTS "SHERLOCKWINGS_EDW_UTIL_DB_RW_AR";
DROP ROLE IF EXISTS "SHERLOCKWINGS_EDW_UTIL_DB_FULL_AR";

  -- Schema & DB Ownership
GRANT OWNERSHIP ON SCHEMA "SHERLOCKWINGS_EDW_DB"."UTIL" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON DATABASE "SHERLOCKWINGS_EDW_DB" TO ROLE SYSADMIN COPY CURRENT GRANTS;

  -- Warheouse access and ownership
DROP ROLE "SHERLOCKWINGS_COMPUTE_U_AR";
DROP ROLE "SHERLOCKWINGS_COMPUTE_UM_AR";
DROP ROLE "SHERLOCKWINGS_COMPUTE_FULL_AR";
GRANT OWNERSHIP ON WAREHOUSE "SHERLOCKWINGS_COMPUTE_WH" TO ROLE SYSADMIN COPY CURRENT GRANTS;


-- 
-- SANDBOX Environment
--

  -- Schema-level access roles
USE ROLE SECURITYADMIN;
DROP ROLE IF EXISTS "SANDBOX_EDW_DB_R_AR";
DROP ROLE IF EXISTS "SANDBOX_EDW_DB_RW_AR";
DROP ROLE IF EXISTS "SANDBOX_EDW_DB_FULL_AR";


  -- Schema & DB Ownership

/*
All the access in Sandbox is natively at the Database level, not the schema level.

In this exercise, we are trying to create a script that tears down all the current RBAC
so it can be built anew in a subsequent step. At the end of this current script's
execution, SYSADMIN should be the owner of the SANDBOX db and all its contents.

Normally, we'd do this schema-by-schema like we do in the other environments. However,
because of the nature of the Sandbox, there's no way to be sure to know what the exact
names of the schema are in Sandbox at any given time, or even how many there are. 

That means the EASIEST way to get this done now would be to just drop and recreate 
the DB as SYSADMIN. This is not ideal-- the *ideal* solution would be a sproc that does 
this:

1. Queries metadata to dynamically identify all schema that exist in the DB at runtime
2. Loops through every single schema, running 
         `GRANT OWNERSHIP... TO ROLE SYSADMIN COPY CURRENT GRANTS`
   ... on everything it finds.

A non-trivial requirement. I will figure out how to do that in a future release. 

*/
USE ROLE SYSADMIN;
CREATE OR REPLACE DATABASE SANDBOX_EDW_DB;
USE ROLE SECURITYADMIN;

  -- Warheouse access and ownership
DROP ROLE "SANDBOX_COMPUTE_U_AR";
DROP ROLE "SANDBOX_COMPUTE_UM_AR";
DROP ROLE "SANDBOX_COMPUTE_FULL_AR";
GRANT OWNERSHIP ON WAREHOUSE "SANDBOX_COMPUTE_WH" TO ROLE SYSADMIN COPY CURRENT GRANTS;


--
-- DEV Environment
--

  -- Schema-level access roles
DROP ROLE IF EXISTS "DEV_EDW_RAW_DB_R_AR";
DROP ROLE IF EXISTS "DEV_EDW_RAW_DB_RW_AR";
DROP ROLE IF EXISTS "DEV_EDW_RAW_DB_FULL_AR";

DROP ROLE IF EXISTS "DEV_EDW_STAGE_DB_R_AR";
DROP ROLE IF EXISTS "DEV_EDW_STAGE_DB_RW_AR";
DROP ROLE IF EXISTS "DEV_EDW_STAGE_DB_FULL_AR";

DROP ROLE IF EXISTS "DEV_EDW_MODEL_DB_R_AR";
DROP ROLE IF EXISTS "DEV_EDW_MODEL_DB_RW_AR";
DROP ROLE IF EXISTS "DEV_EDW_MODEL_DB_FULL_AR";

  -- Schema & DB Ownership
GRANT OWNERSHIP ON SCHEMA "DEV_EDW_DB"."RAW" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON SCHEMA "DEV_EDW_DB"."STAGE" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON SCHEMA "DEV_EDW_DB"."MODEL" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON DATABASE "DEV_EDW_DB" TO ROLE SYSADMIN COPY CURRENT GRANTS;

  -- Warheouse access and ownership
DROP ROLE "DEV_COMPUTE_U_AR";
DROP ROLE "DEV_COMPUTE_UM_AR";
DROP ROLE "DEV_COMPUTE_FULL_AR";
GRANT OWNERSHIP ON WAREHOUSE "DEV_COMPUTE_WH" TO ROLE SYSADMIN COPY CURRENT GRANTS;




--
-- QA Environment
--

  -- Schema-level access roles
DROP ROLE IF EXISTS "QA_EDW_RAW_DB_R_AR";
DROP ROLE IF EXISTS "QA_EDW_RAW_DB_RW_AR";
DROP ROLE IF EXISTS "QA_EDW_RAW_DB_FULL_AR";

DROP ROLE IF EXISTS "QA_EDW_STAGE_DB_R_AR";
DROP ROLE IF EXISTS "QA_EDW_STAGE_DB_RW_AR";
DROP ROLE IF EXISTS "QA_EDW_STAGE_DB_FULL_AR";

DROP ROLE IF EXISTS "QA_EDW_MODEL_DB_R_AR";
DROP ROLE IF EXISTS "QA_EDW_MODEL_DB_RW_AR";
DROP ROLE IF EXISTS "QA_EDW_MODEL_DB_FULL_AR";

  -- Schema & DB Ownership
GRANT OWNERSHIP ON SCHEMA "QA_EDW_DB"."RAW" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON SCHEMA "QA_EDW_DB"."STAGE" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON SCHEMA "QA_EDW_DB"."MODEL" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON DATABASE "QA_EDW_DB" TO ROLE SYSADMIN COPY CURRENT GRANTS;

  -- Warheouse access and ownership
DROP ROLE "QA_COMPUTE_U_AR";
DROP ROLE "QA_COMPUTE_UM_AR";
DROP ROLE "QA_COMPUTE_FULL_AR";
GRANT OWNERSHIP ON WAREHOUSE "QA_COMPUTE_WH" TO ROLE SYSADMIN COPY CURRENT GRANTS;




--
-- PROD Environment
--

  -- Schema-level access roles
DROP ROLE IF EXISTS "PROD_EDW_RAW_DB_R_AR";
DROP ROLE IF EXISTS "PROD_EDW_RAW_DB_RW_AR";
DROP ROLE IF EXISTS "PROD_EDW_RAW_DB_FULL_AR";

DROP ROLE IF EXISTS "PROD_EDW_STAGE_DB_R_AR";
DROP ROLE IF EXISTS "PROD_EDW_STAGE_DB_RW_AR";
DROP ROLE IF EXISTS "PROD_EDW_STAGE_DB_FULL_AR";

DROP ROLE IF EXISTS "PROD_EDW_MODEL_DB_R_AR";
DROP ROLE IF EXISTS "PROD_EDW_MODEL_DB_RW_AR";
DROP ROLE IF EXISTS "PROD_EDW_MODEL_DB_FULL_AR";

  -- Schema & DB Ownership
GRANT OWNERSHIP ON SCHEMA "PROD_EDW_DB"."RAW" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON SCHEMA "PROD_EDW_DB"."STAGE" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON SCHEMA "PROD_EDW_DB"."MODEL" TO ROLE SYSADMIN COPY CURRENT GRANTS;
GRANT OWNERSHIP ON DATABASE "PROD_EDW_DB" TO ROLE SYSADMIN COPY CURRENT GRANTS;

  -- Warheouse access and ownership
DROP ROLE "PROD_COMPUTE_U_AR";
DROP ROLE "PROD_COMPUTE_UM_AR";
DROP ROLE "PROD_COMPUTE_FULL_AR";
GRANT OWNERSHIP ON WAREHOUSE "PROD_COMPUTE_WH" TO ROLE SYSADMIN COPY CURRENT GRANTS;



 
